// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

import * as wasmlib from "wasmlib";
import * as sc from "./index";

export class InitCall {
	func: wasmlib.ScInitFunc = new wasmlib.ScInitFunc(sc.HScName, sc.HFuncInit);
	params: sc.MutableInitParams = new sc.MutableInitParams();
}

export class InitContext {
	params: sc.ImmutableInitParams = new sc.ImmutableInitParams();
	state: sc.MutableFarmFairState = new sc.MutableFarmFairState();
}

export class SetOwnerCall {
	func: wasmlib.ScFunc = new wasmlib.ScFunc(sc.HScName, sc.HFuncSetOwner);
	params: sc.MutableSetOwnerParams = new sc.MutableSetOwnerParams();
}

export class SetOwnerContext {
	params: sc.ImmutableSetOwnerParams = new sc.ImmutableSetOwnerParams();
	state: sc.MutableFarmFairState = new sc.MutableFarmFairState();
}

export class TransactCall {
	func: wasmlib.ScFunc = new wasmlib.ScFunc(sc.HScName, sc.HFuncTransact);
	params: sc.MutableTransactParams = new sc.MutableTransactParams();
}

export class TransactContext {
	params: sc.ImmutableTransactParams = new sc.ImmutableTransactParams();
	state: sc.MutableFarmFairState = new sc.MutableFarmFairState();
}

export class GetOwnerCall {
	func: wasmlib.ScView = new wasmlib.ScView(sc.HScName, sc.HViewGetOwner);
	results: sc.ImmutableGetOwnerResults = new sc.ImmutableGetOwnerResults();
}

export class GetOwnerContext {
	results: sc.MutableGetOwnerResults = new sc.MutableGetOwnerResults();
	state: sc.ImmutableFarmFairState = new sc.ImmutableFarmFairState();
}

export class ScFuncs {

    static init(ctx: wasmlib.ScFuncCallContext): InitCall {
        let f = new InitCall();
        f.func.setPtrs(f.params, null);
        return f;
    }

    static setOwner(ctx: wasmlib.ScFuncCallContext): SetOwnerCall {
        let f = new SetOwnerCall();
        f.func.setPtrs(f.params, null);
        return f;
    }

    static transact(ctx: wasmlib.ScFuncCallContext): TransactCall {
        let f = new TransactCall();
        f.func.setPtrs(f.params, null);
        return f;
    }

    static getOwner(ctx: wasmlib.ScViewCallContext): GetOwnerCall {
        let f = new GetOwnerCall();
        f.func.setPtrs(null, f.results);
        return f;
    }
}
