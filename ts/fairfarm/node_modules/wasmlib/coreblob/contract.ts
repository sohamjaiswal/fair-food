// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

import * as wasmlib from "wasmlib";
import * as sc from "./index";

export class StoreBlobCall {
	func: wasmlib.ScFunc = new wasmlib.ScFunc(sc.HScName, sc.HFuncStoreBlob);
	params: sc.MutableStoreBlobParams = new sc.MutableStoreBlobParams();
	results: sc.ImmutableStoreBlobResults = new sc.ImmutableStoreBlobResults();
}

export class GetBlobFieldCall {
	func: wasmlib.ScView = new wasmlib.ScView(sc.HScName, sc.HViewGetBlobField);
	params: sc.MutableGetBlobFieldParams = new sc.MutableGetBlobFieldParams();
	results: sc.ImmutableGetBlobFieldResults = new sc.ImmutableGetBlobFieldResults();
}

export class GetBlobInfoCall {
	func: wasmlib.ScView = new wasmlib.ScView(sc.HScName, sc.HViewGetBlobInfo);
	params: sc.MutableGetBlobInfoParams = new sc.MutableGetBlobInfoParams();
	results: sc.ImmutableGetBlobInfoResults = new sc.ImmutableGetBlobInfoResults();
}

export class ListBlobsCall {
	func: wasmlib.ScView = new wasmlib.ScView(sc.HScName, sc.HViewListBlobs);
	results: sc.ImmutableListBlobsResults = new sc.ImmutableListBlobsResults();
}

export class ScFuncs {

    static storeBlob(ctx: wasmlib.ScFuncCallContext): StoreBlobCall {
        let f = new StoreBlobCall();
        f.func.setPtrs(f.params, f.results);
        return f;
    }

    static getBlobField(ctx: wasmlib.ScViewCallContext): GetBlobFieldCall {
        let f = new GetBlobFieldCall();
        f.func.setPtrs(f.params, f.results);
        return f;
    }

    static getBlobInfo(ctx: wasmlib.ScViewCallContext): GetBlobInfoCall {
        let f = new GetBlobInfoCall();
        f.func.setPtrs(f.params, f.results);
        return f;
    }

    static listBlobs(ctx: wasmlib.ScViewCallContext): ListBlobsCall {
        let f = new ListBlobsCall();
        f.func.setPtrs(null, f.results);
        return f;
    }
}
