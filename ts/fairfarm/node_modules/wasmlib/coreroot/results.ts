// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

import * as wasmlib from "wasmlib";
import * as sc from "./index";

export class ImmutableFindContractResults extends wasmlib.ScMapID {

    contractFound(): wasmlib.ScImmutableBytes {
		return new wasmlib.ScImmutableBytes(this.mapID, wasmlib.Key32.fromString(sc.ResultContractFound));
	}

    contractRecData(): wasmlib.ScImmutableBytes {
		return new wasmlib.ScImmutableBytes(this.mapID, wasmlib.Key32.fromString(sc.ResultContractRecData));
	}
}

export class MutableFindContractResults extends wasmlib.ScMapID {

    contractFound(): wasmlib.ScMutableBytes {
		return new wasmlib.ScMutableBytes(this.mapID, wasmlib.Key32.fromString(sc.ResultContractFound));
	}

    contractRecData(): wasmlib.ScMutableBytes {
		return new wasmlib.ScMutableBytes(this.mapID, wasmlib.Key32.fromString(sc.ResultContractRecData));
	}
}

export class MapHnameToImmutableBytes {
	objID: i32;

    constructor(objID: i32) {
        this.objID = objID;
    }

    getBytes(key: wasmlib.ScHname): wasmlib.ScImmutableBytes {
        return new wasmlib.ScImmutableBytes(this.objID, key.getKeyID());
    }
}

export class ImmutableGetContractRecordsResults extends wasmlib.ScMapID {

    contractRegistry(): sc.MapHnameToImmutableBytes {
		let mapID = wasmlib.getObjectID(this.mapID, wasmlib.Key32.fromString(sc.ResultContractRegistry), wasmlib.TYPE_MAP);
		return new sc.MapHnameToImmutableBytes(mapID);
	}
}

export class MapHnameToMutableBytes {
	objID: i32;

    constructor(objID: i32) {
        this.objID = objID;
    }

    clear(): void {
        wasmlib.clear(this.objID);
    }

    getBytes(key: wasmlib.ScHname): wasmlib.ScMutableBytes {
        return new wasmlib.ScMutableBytes(this.objID, key.getKeyID());
    }
}

export class MutableGetContractRecordsResults extends wasmlib.ScMapID {

    contractRegistry(): sc.MapHnameToMutableBytes {
		let mapID = wasmlib.getObjectID(this.mapID, wasmlib.Key32.fromString(sc.ResultContractRegistry), wasmlib.TYPE_MAP);
		return new sc.MapHnameToMutableBytes(mapID);
	}
}
