// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

import * as wasmlib from "wasmlib";
import * as sc from "./index";

export class DepositCall {
	func: wasmlib.ScFunc = new wasmlib.ScFunc(sc.HScName, sc.HFuncDeposit);
	params: sc.MutableDepositParams = new sc.MutableDepositParams();
}

export class HarvestCall {
	func: wasmlib.ScFunc = new wasmlib.ScFunc(sc.HScName, sc.HFuncHarvest);
	params: sc.MutableHarvestParams = new sc.MutableHarvestParams();
}

export class WithdrawCall {
	func: wasmlib.ScFunc = new wasmlib.ScFunc(sc.HScName, sc.HFuncWithdraw);
}

export class AccountsCall {
	func: wasmlib.ScView = new wasmlib.ScView(sc.HScName, sc.HViewAccounts);
	results: sc.ImmutableAccountsResults = new sc.ImmutableAccountsResults();
}

export class BalanceCall {
	func: wasmlib.ScView = new wasmlib.ScView(sc.HScName, sc.HViewBalance);
	params: sc.MutableBalanceParams = new sc.MutableBalanceParams();
	results: sc.ImmutableBalanceResults = new sc.ImmutableBalanceResults();
}

export class GetAccountNonceCall {
	func: wasmlib.ScView = new wasmlib.ScView(sc.HScName, sc.HViewGetAccountNonce);
	params: sc.MutableGetAccountNonceParams = new sc.MutableGetAccountNonceParams();
	results: sc.ImmutableGetAccountNonceResults = new sc.ImmutableGetAccountNonceResults();
}

export class TotalAssetsCall {
	func: wasmlib.ScView = new wasmlib.ScView(sc.HScName, sc.HViewTotalAssets);
	results: sc.ImmutableTotalAssetsResults = new sc.ImmutableTotalAssetsResults();
}

export class ScFuncs {

    static deposit(ctx: wasmlib.ScFuncCallContext): DepositCall {
        let f = new DepositCall();
        f.func.setPtrs(f.params, null);
        return f;
    }

    static harvest(ctx: wasmlib.ScFuncCallContext): HarvestCall {
        let f = new HarvestCall();
        f.func.setPtrs(f.params, null);
        return f;
    }

    static withdraw(ctx: wasmlib.ScFuncCallContext): WithdrawCall {
        return new WithdrawCall();
    }

    static accounts(ctx: wasmlib.ScViewCallContext): AccountsCall {
        let f = new AccountsCall();
        f.func.setPtrs(null, f.results);
        return f;
    }

    static balance(ctx: wasmlib.ScViewCallContext): BalanceCall {
        let f = new BalanceCall();
        f.func.setPtrs(f.params, f.results);
        return f;
    }

    static getAccountNonce(ctx: wasmlib.ScViewCallContext): GetAccountNonceCall {
        let f = new GetAccountNonceCall();
        f.func.setPtrs(f.params, f.results);
        return f;
    }

    static totalAssets(ctx: wasmlib.ScViewCallContext): TotalAssetsCall {
        let f = new TotalAssetsCall();
        f.func.setPtrs(null, f.results);
        return f;
    }
}
